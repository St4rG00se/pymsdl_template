################################
###### PROJECT PROPERTIES ######
################################

### PROJECT SECTION ###
[PROJECT]
name = hellopysdl
version = 1.0.0
author = author
email = author@mail.com
description = A Python template inspired from the Maven Standard Directory Layout
url = https://github.com/St4rG00se/${name}
license = MIT

# use_pipenv: (default: True)
#      True -> use Pipfile.lock for setup install_requires
#      False -> Use requirements.txt for setup install_requires
; use_pipenv = True

# long_description_file: (default: README.md)
#      Path to the project description file
; long_description_file = README.md

# long_description_content_type: (default: text/markdown)
#      Project description file type
#      (See: https://packaging.python.org/en/latest/guides/making-a-pypi-friendly-readme/#including-your-readme-in-your-package-s-metadata)
; long_description_content_type = text/markdown

# test_file_pattern: (default: *[Tt]est*.py)
#       Test file name pattern
; test_file_pattern = *[Tt]est*.py


### PROJECT ENTRYPOINTS SECTION ###
#
# Example:
# ```
# [PROJECT.ENTRY_POINTS]
# console_scripts = hello = hellopysdl.__main__:hello
#                   hello2 = hellopysdl.__main__:hello2
# ```
# is equivalent (in setup.py) to:
# ```
#setup(...,
#    entry_points={'console_scripts': ['hello = hellopysdl.__main__:hello',  'hello2 = hellopysdl.__main__:hello2']},
#    ...
# )
# ```
# Note: The new line is the list separator
[PROJECT.ENTRY_POINTS]
console_scripts = hello = ${PROJECT:name}.__main__:hello


### PROJECT STRUCTURE SECTION ###
#
# Default values describe the Maven Standard Directory Layout
# If you want to use this template but not the Maven Standard Directory Layout you can define your project structure in
# this section
[PROJECT.STRUCTURE]
;sources_path = src/main/python
;resources_path = src/main/resources
;test_sources_path = src/test/python
;test_resources_path = src/test/resources
;build_path = build
;dist_path = dist
